- name: Install PostgreSQL 
  apt: "name={{ item }} state=present"
  with_items:
    - postgresql-15
    - postgresql-contrib
    - net-tools

- name: Allowing connections to PostgreSQL
  lineinfile:
    path: /etc/postgresql/15/main/pg_hba.conf
    line: "host replication {{ user_replication }} {{ ansible_repl_host }}/32 scram-sha-256\nhost all all {{ hostvars[inventory_hostname]['ansible_host'] }}/32 password"
    insertafter: EOF
    state: present
  notify:
    - Restart PostgreSQL

- name: Flush handlers
  meta: flush_handlers

- name: Create WAL directory
  ansible.builtin.file:
    path: /data/WAL/archive/
    state: directory
    owner: postgres
    group: postgres

- name: Configure PostgreSQL connections
  community.postgresql.postgresql_set:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
  become_user: postgres
  with_dict: {archive_mode: "on", archive_command: "cp %p /data/WAL/archive/%f", max_wal_senders: 10, wal_level: replica, wal_log_hints: "on", listen_addresses: '*', port: "{{ PORT }}", log_replication_commands: "on"}
  notify:
    - Restart PostgreSQL

- name: Flush handlers
  meta: flush_handlers

- name: Create user for replication
  community.postgresql.postgresql_user:
    name: "{{ user_replication }}"
    password: "{{ password_replication }}"
    role_attr_flags: REPLICATION
    port: "{{ PORT }}"
  become_user: postgres

- name: Set password for postgres user
  community.postgresql.postgresql_user:
    name: postgres
    password: "{{ DB_PASSWORD }}"
    port: "{{ PORT }}"
  become_user: postgres


- name: Create database 'telegram bot'
  community.postgresql.postgresql_db:
    name: "{{ DB_DATABASE  }}"
    owner: "{{ DB_USER }}"
    port: "{{ PORT }}"
  become_user: postgres

- name: Create table 'emails'
  community.postgresql.postgresql_table:
    db: "{{ DB_DATABASE }}"
    table: "emails"
    owner: "{{ DB_USER }}"
    port: "{{ PORT }}"
    columns:
      - id SERIAL PRIMARY KEY
      - email VARCHAR(100) NOT NULL
  become_user: postgres

- name: Create table 'phone_numbers'
  community.postgresql.postgresql_table:
    db: "{{ DB_DATABASE }}"
    table: "phone_numbers"
    owner: "{{ DB_USER }}"
    port: "{{ PORT }}"
    columns:
      - id SERIAL PRIMARY KEY
      - phone_number VARCHAR(18)
  become_user: postgres

- name: Insert emails into the 'emails' table
  community.postgresql.postgresql_query:
    db: "{{ DB_DATABASE }}"
    query: |
      INSERT INTO emails (email) VALUES 
      ('ivan.pepe@nstu.ru'), 
      ('olga.petrova@gmail.com');
  become_user: postgres

- name: Insert phone numbers into the 'phone_numbers' table
  community.postgresql.postgresql_query:
    db: "{{ DB_DATABASE }}"
    query: |
      INSERT INTO phone_numbers (phone_number) VALUES 
      ('+7 (900) 567 21 22'), 
      ('8(905)-376-99-45');
  become_user: postgres

- name: Grant read permission to a specific user
  acl:
    path: /var/log/postgresql/postgresql-15-main.log
    entity: "{{ ansible_user }}"
    etype: user
    permissions: r
