services:
  bot:
    image: 192.168.0.40:5000/bot_image:latest
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - db

  db:
    image:  192.168.0.40:5000/db_image:latest
    ports:
      - "5432:5432"
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication repl_user 0.0.0.0/0 scram-sha-256\nhost all all 0.0.0.0/0 password"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    command: |
      postgres
      -c wal_level=replica
      -c hot_standby=on
      -c max_wal_senders=10
      -c max_replication_slots=10
      -c hot_standby_feedback=on
      -c log_replication_commands=on
      -c log_filename='postgresql-%Y-%m-%d.log'

  db_replica:
    image:  192.168.0.40:5000/db_repl_image:latest
    ports:
      - "5433:5432"
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_REPL_USER}
      POSTGRES_PASSWORD: ${DB_REPL_PASSWORD}
      PGPASSWORD: Qq12345
    command: |
      bash -c "
      #rm -rf /var/lib/postgresql/data &&
      export PGPASSWORD=Qq12345 &&
      until pg_basebackup -h db -D /var/lib/postgresql/data -R -U repl_user -P;
      do
      echo 'Waiting for primary to connect…';
      sleep 1;
      done;
      echo 'Backup done, starting replica…';
      chown -R postgres:postgres /var/lib/postgresql/data &&
      chmod 0700 /var/lib/postgresql/data
      su postgres -c 'exec /usr/lib/postgresql/15/bin/postgres -D /var/lib/postgresql/data'"
    depends_on:
      - db